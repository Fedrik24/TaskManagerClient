@page "/task"
@using TaskManagerClient.Client.Layout
@using TaskManagerClient.Client.Utility
@layout TaskLayout

<h3>TaskPage</h3>


<style>
    .draggable {
        border: 1px solid #ccc;
        border-radius: 5px;
        margin: 1rem;
        padding: 1rem;
        display: inline-block;
        cursor: move;
    }

    .drop-target {
        border: 1px dashed #ebebeb;
        margin: 1rem;
        padding: 1rem;
        display: inline-block;
    }
</style>

<RadzenRow Gap="1" JustifyContent="JustifyContent.Normal" AlignItems="AlignItems.Normal" class="rz-border-info-light">
    <RadzenColumn Size="3" class="rz-background-color-info-lighter rz-color-on-info-lighter rz-text-align-center rz-p-2">
        <p>New Task</p>
    </RadzenColumn>
    <RadzenColumn Size="3" class="rz-background-color-info-lighter rz-color-on-info-lighter rz-text-align-center rz-p-2">
        <p>Task Progress</p>
    </RadzenColumn>
    <RadzenColumn Size="3" class="rz-background-color-info-lighter rz-color-on-info-lighter rz-text-align-center rz-p-2">
        <p>Task Review</p>
    </RadzenColumn>
    <RadzenColumn Size="3" class="rz-background-color-info-lighter rz-color-on-info-lighter rz-text-align-center rz-p-2">
        <p>Task Finish</p>
    </RadzenColumn>
</RadzenRow>


<RadzenRow Gap="1" JustifyContent="JustifyContent.Normal" AlignItems="AlignItems.Normal" Style="height:500px">
    <RadzenColumn Size="3" class="rz-background-color-info-lighter rz-color-on-info-lighter rz-text-align-center rz-p-2">
        <Draggable Data="@draggableDataA">
            <div class="draggable">
                Draggable A
            </div>
        </Draggable>
    </RadzenColumn>
    <RadzenColumn Size="3" class="rz-background-color-info-lighter rz-color-on-info-lighter rz-text-align-center rz-p-2">
        <DropTarget T="String" Drop="@OnDrop">
            <div class="drop-target">
                @if (dropMessage != null)
                {
                    @dropMessage
                }
            </div>
        </DropTarget>
    </RadzenColumn>
    <RadzenColumn Size="3" class="rz-background-color-info-lighter rz-color-on-info-lighter rz-text-align-center rz-p-2">
        <p>Task Review</p>
    </RadzenColumn>
    <RadzenColumn Size="3" class="rz-background-color-info-lighter rz-color-on-info-lighter rz-text-align-center rz-p-2">
        <p>Task Finish</p>
    </RadzenColumn>
</RadzenRow>

<Draggable Data="@draggableDataA">
    <div class="draggable">
        Draggable A
    </div>
</Draggable>

<Draggable Data="@draggableDataB">
    <div class="draggable">
        Draggable B
    </div>
</Draggable>

<DropTarget T="String" Drop="@OnDrop">
    <div class="drop-target">
        Accepts Draggable A or B
    </div>
</DropTarget>

@if (dropMessage != null)
{
    @dropMessage
}

<DropTarget T="String" Zone="DropZone">
    <div class="drop-target">
        Can't drop here
    </div>
</DropTarget>

@code {
    string draggableDataA = "Test Drag Object";
    string draggableDataB = "Draggable Data B";

    string dropMessage = null;

    void OnDrop(string data)
    {
        dropMessage = $"Dropped: {data}";

        Console.WriteLine($"Test Drop Data : {data}");

        StateHasChanged();
    }
}
